<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"      
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd           
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- Activates annotation-based bean configuration -->
	<context:annotation-config />
	
	<!-- Scans for application @Components to deploy -->
	<context:component-scan base-package="com.zxd.store" />

	<!-- Instructs Spring to perfrom declarative transaction managemenet on annotated classes -->
	<tx:annotation-driven />

	<!-- Drives transactions using local JPA APIs -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
		
	<!-- Creates a EntityManagerFactory for use with the Hibernate JPA provider and a simple in-memory data source populated with test data -->
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		</property>
	</bean>
	
	<!-- Deploys a in-memory "booking" datasource populated -->
	<!-- <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
	   <property name="driverClass" value="${jdbc.driverClass}" />
	   <property name="jdbcUrl" value="${jdbc.jdbcUrl}" />
	   <property name="user" value="${jdbc.user}" />
	   <property name="password" value="${jdbc.password}" />
	   <property name="minPoolSize" value="${jdbc.miniPoolSize}" />
	   <property name="maxPoolSize" value="${jdbc.maxPoolSize}"/>  
	   <property name="initialPoolSize" value="${jdbc.initialPoolSize}"/>
	   <property name="maxIdleTime" value="${jdbc.maxIdleTime}"/>
	   <property name="acquireIncrement" value="${jdbc.acquireIncrement}"/>
	   <property name="acquireRetryAttempts" value="${jdbc.acquireRetryAttempts}"/>
	   <property name="acquireRetryDelay" value="${jdbc.acquireRetryDelay}"/>
	   <property name="testConnectionOnCheckin" value="${jdbc.testConnectionOnCheckin}"/>
	   <property name="automaticTestTable" value="${jdbc.automaticTestTable}"/>
	   <property name="idleConnectionTestPeriod" value="${jdbc.idleConnectionTestPeriod}"/>
	   <property name="checkoutTimeout" value="${jdbc.checkoutTimeout}"/>
		
	</bean> -->
	
</beans>